name: tool
on:
  workflow_dispatch:
    inputs:
      url:
        description: 'go cmd url'
        required: true
        default: ''
      version:
        description: 'go cmd version'
        required: true
        default: ''
      name:
        description: 'go cmd name'
        required: true
        default: ''
      go:
        description: 'go'
        required: true
        default: '-go go1.18'


jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      needbuild: ${{ steps.checktag.outputs.needbuild }}

    steps:
    - name: Checkout
      timeout-minutes: 1
      uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Check tag
      id: checktag
      run: bash script/checktag.sh ${{secrets.GIT_TOKEN}} ${{github.event.inputs.name}}_${{github.event.inputs.version}}

  release:
    needs: [check]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      timeout-minutes: 1
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Setup
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Download Go
      timeout-minutes: 35
      run: |
        docker run -v ${PWD}:/app --workdir /app --platform "linux/amd64" tiechui1994/ubuntu:18.04 \
        make -C golang tool && \
        golang/tool -name ${{github.event.inputs.name}} -version ${{github.event.inputs.version}} \
        -url ${{github.event.inputs.url}} -arch amd64 -arch arm64 -dist . ${{github.event.inputs.go}}
      shell: bash

    - name: Release
      if: ${{ success() }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GIT_TOKEN }}
        file: ${{github.workspace}}/${{github.event.inputs.name}}-*
        asset_name: ${{github.event.inputs.name}}_${{github.event.inputs.version}}
        tag: ${{github.event.inputs.name}}_${{github.event.inputs.version}}
        overwrite: true
        body: "release ${{github.event.inputs.name}}_${{github.event.inputs.version}}"
        file_glob: true
