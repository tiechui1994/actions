name: dlv
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'dlv version'
        required: true
        default: 'v1.7.3'

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      needbuild: ${{ steps.checktag.outputs.needbuild }}

    steps:
    - name: Checkout
      timeout-minutes: 1
      uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Check tag
      id: checktag
      run: bash script/checktag.sh ${{secrets.GIT_TOKEN}} dlv_${{github.event.inputs.version}}

  build:
    needs: [check]
    if: ${{ needs.check.outputs.needbuild == 0 }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ['amd64', 'arm64']
        go: ['1.17', '1.18']

    steps:
    - name: Checkout
      timeout-minutes: 1
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Use Go ${{matrix.go}}
      uses: actions/setup-go@v3
      with:
        go-version: ${{matrix.go}}

    - name: Build On ${{matrix.arch}} ${{matrix.go}}
      timeout-minutes: 5
      run: |
        gopath=$(go env GOPATH)
        sudo chown -R $(whoami):$(whoami) ${gopath} && \
        mkdir -p ${gopath}/src/github.com/go-delve && \
        cd ${gopath}/src/github.com/go-delve

        git clone --tags https://github.com/go-delve/delve.git

        cd delve && \
        git checkout -b ${{github.event.inputs.version}} ${{github.event.inputs.version}}

        GOOS="linux" \
        GOARCH="${{matrix.arch}}" \
        go install -v github.com/go-delve/delve/cmd/dlv

        dlv="${gopath}/bin/dlv"
        if [[ ${{matrix.arch}} = "arm64" ]]; then
          dlv="${gopath}/bin/linux_arm64/dlv"
        fi
        cp ${dlv} ${{github.workspace}}/dlv-${{matrix.go}}-${{matrix.arch}}
      shell: bash

    - name: Cache files
      id: restore-build
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/dlv-${{matrix.go}}-${{matrix.arch}}
        key: ${{github.sha}}-${{matrix.go}}-${{matrix.arch}}

  release:
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      count: ${{ steps.files.outputs.count }}

    steps:
    - name: Checkout
      timeout-minutes: 1
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/dlv-1.13-amd64
        key: ${{github.sha}}-1.13-amd64
    - uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/dlv-1.13-arm64
        key: ${{github.sha}}-1.13-arm64
    - uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/dlv-1.15-amd64
        key: ${{github.sha}}-1.15-amd64
    - uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/dlv-1.15-arm64
        key: ${{github.sha}}-1.15-arm64
    - uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/dlv-1.16-amd64
        key: ${{github.sha}}-1.16-amd64
    - uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/dlv-1.16-arm64
        key: ${{github.sha}}-1.16-arm64

    - name: Files
      id: files
      run: |
        echo ${PWD}
        echo "::set-output name=count::$(ls|grep dlv|wc -l)"
        ls -al ${PWD}

    - name: Release
      if: ${{ success() && steps.files.outputs.count == 6 }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GIT_TOKEN }}
        file: ${{github.workspace}}/dlv-*
        asset_name: dlv_${{github.event.inputs.version}}
        tag: dlv_${{github.event.inputs.version}}
        overwrite: true
        body: "release dlv_${{github.event.inputs.version}} install in ${{github.event.inputs.install}}"
        file_glob: true